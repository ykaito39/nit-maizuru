#encoding: UTF-8

#32*48のデータをシリアル通信できる形に分割するプログラム
#備考:32*48ビット=192バイト
#dataは(M,N)型;M行N列

import sys
import os
import serial

#地図データ(仮)
original_data      = [0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011110011111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011001011111111011,
                      0b11000111001101011111111111010011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111111111011,
                      0b11000111001101011111111100010001]

#ヘッダ・フッタ・エスケープシーケンス
START   = 0x11
END     = 0x22
ESC     = 0x33

#2次元配列dataの定義
M = len(original_data)
N = 4
data = [[0 for j in range(N)] for i in range(M)]
                          
#8bitごとに分割(シリアル通信は8bitごと)
for i in range(M):
    print("["+str(i)+"]", end="")
    for j in range(N):
        data[i][j] = (original_data[i] >> j*8) & 0xff
        print(hex(data[i][j]), end=" ")
    print("\n", end="")

#シリアル通信を行なう
if os.name == 'nt':
    sel = serial.Serial("COM12") #Arduinoのポートを"COM1"みたいに直打ちしてね(ハート)
#    for i in range(256):
#        try:
#            dev = i
#            sel = serial.Serial(dev,9600)
#            sel.open()
#            break
#        except:
#            i = i
else: #とりあえず書いたけど使えるかわからない...
    for f in os.listdir('/dev/'):
        if "tty" in file:             #Linux?
            for i in range(256):
                try:
                    dev = '/dev/' + file
                    sel = serial.Serial(dev,9600)
                    sel.open()
                    break
                except:
                    i = i
        elif "tty.usbmodem" in file:  #MacOS X?
            dev = '/dev/' + file
            sel = serial.Serial(dev,9600)
            sel.open()
    
#データ送るよー
#一つのマップデータを送るときのフォーマット<START><MAP_DATA><END>
sel.write(START)

for d in data:
    for d_hoge in d: #2次元目の取り出し
        if (d_hoge == START) and (d_hoge == END):
            sel.write(ESC)
            sel.write(d_hoge)

sel.write(END)
sel.close()
